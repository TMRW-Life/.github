name: Deployment

on:
  workflow_call:
    inputs:
      php:
        description: 'Specify the php version (https://github.com/shivammathur/setup-php#tada-php-support)'
        type: string
        required: true
      passport:
        description: 'Generate private and public keys for Laravel Passport'
        type: boolean
        required: true
      environment:
        description: 'Specify the environment to deploy to (e.g., "production" | "staging")'
        type: string
        required: true
      node:
        description: 'Specify the version of NodeJS'
        type: number
        required: false
        default: 20
      checkout:
        description: 'The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event. Otherwise, uses the default branch.'
        type: string
        required: false
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php }}
          tools: composer:v2
          coverage: none
        env:
          GITHUB_TOKEN: ${{ secrets.COMPOSER_TOKEN }}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node }}

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install --no-interaction

      - name: Setup Passport
        if: ${{ inputs.passport }}
        run: php artisan passport:keys --force

      - name: Require Vapor CLI
        run: composer global require laravel/vapor-cli

      - name: Deploy Environment
        run: vapor deploy ${{ inputs.environment }} --commit="${{ github.sha }}" --message="${{ github.event.head_commit.message }}"
        env:
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
          LARAVEL_ENV_ENCRYPTION_KEY: ${{ secrets.LARAVEL_ENV_ENCRYPTION_KEY }}
