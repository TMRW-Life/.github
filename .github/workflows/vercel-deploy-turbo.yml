name: Deployment

on:
  workflow_call:
    secrets:
      VERCEL_TOKEN:
        required: true
      VERCEL_ORG_ID:
        required: true
      VERCEL_PROJECT_ID:
        required: true
      LOKALISE_API_KEY:
        required: true
      LOKALISE_PROJECT_ID:
        required: true
    inputs:
      lokalise:
        default: true
        type: boolean
      environment:
        default: preview
        type: string
      cwd:
        default: "./"
        type: string
      scope:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      TURBO_TEAM: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: ${{ inputs.cwd }}**/yarn.lock

      - name: Install Vercel CLI globally
        run: yarn global add vercel

      - name: Install dependencies
        run: yarn install
        working-directory: ${{ inputs.cwd }}

      - name: Lokalise
        if: ${{ inputs.lokalise }}
        run: |
          curl -sfL https://raw.githubusercontent.com/lokalise/lokalise-cli-2-go/master/install.sh | sh
          mv ./bin/lokalise2 /usr/local/bin/lokalise2
          lokalise2 --token="${{ secrets.LOKALISE_API_KEY }}" --project-id="${{ secrets.LOKALISE_PROJECT_ID }}" file download --format=json --unzip-to=./public/locales
        working-directory: ${{ format('{0}apps/{1}', inputs.cwd, inputs.scope) }}

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ${{ format('{0}apps/{1}', inputs.cwd, inputs.scope) }}

      - name: Build Project Artifacts
        run: yarn turbo run build --scope=${{ inputs.scope }} --include-dependencies --no-deps
        working-directory: ${{ inputs.cwd }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }} ${{ inputs.environment == 'production' && '--prod' || '' }}
        working-directory: ${{ format('{0}apps/{1}', inputs.cwd, inputs.scope) }}
